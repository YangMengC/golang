标识符：只能以子母和_开头
举例：abc,_,_123,a123

非全局变量声明后必须使用，不使用编译不过去

变量必须先申明再使用:

    第一种，指定变量类型，如果没有初始化，则变量默认为零值。
        var v_name v_type
        v_name = value

    第二种，根据值自行判定变量类型。
        var v_name = value

    第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：
        v_name := value

    ```
        var intVal int 

        intVal :=1 // 这时候会产生编译错误

        intVal,intVal1 := 1,2 // 此时不会产生编译错误，因为有声明新的变量，因为 := 是一个声明语句

        a := 2

        a := 20 //此时提示 no new variables on left side of :=

        a = 20  //将上面申明过的a值修改为20
    ```

    批量申明
    ```
        //类型相同多个变量, 非全局变量
        var vname1, vname2, vname3 type
        vname1, vname2, vname3 = v1, v2, v3

        var vname1, vname2, vname3 = v1, v2, v3 // 和 python 很像,不需要显示声明类型，自动推断

        vname1, vname2, vname3 := v1, v2, v3 // 出现在 := 左侧的变量不应该是已经被声明过的，否则会导致编译错误


        // 这种因式分解关键字的写法一般用于声明全局变量
        var (
            vname1 v_type1
            vname2 v_type2
        )
    ```


`%s`占位符
fmt.Printf("name:%s",name)

推荐使用小驼峰式命名

打印：
    fmt.Println() //打印指定内容后加一个换行符
    fmt.Print()   //在终端打印要输出的内容
    fmt.Printf()  


合并字符串：
    c = a + b
    fmt.Println("hello "+"world")